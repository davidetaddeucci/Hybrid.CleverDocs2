@namespace Hybrid.CleverDocs.WebUI.Components.Layout
@using Microsoft.AspNetCore.Components.Authorization
@using Hybrid.CleverDocs.WebUI.Services.Auth
@inject IAuthService AuthService
@inject NavigationManager Navigation

<div class="cd-topbar-content">
    <!-- Page Title and Breadcrumb -->
    <div class="cd-topbar-left">
        <h1 class="cd-topbar-title">
            @GetPageTitle()
        </h1>
        
        @if (ShowBreadcrumb)
        {
            <nav class="cd-breadcrumb">
                <span class="cd-breadcrumb-item">Home</span>
                <svg class="cd-breadcrumb-separator" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                </svg>
                <span class="cd-breadcrumb-item">@GetPageTitle()</span>
            </nav>
        }
    </div>

    <!-- Actions and User Menu -->
    <div class="cd-topbar-right">
        <!-- Search (if enabled) -->
        @if (ShowSearch)
        {
            <div class="cd-search-container">
                <input type="text" 
                       placeholder="Cerca..." 
                       class="cd-search-input"
                       @bind="searchQuery"
                       @onkeypress="OnSearchKeyPress" />
                <svg class="cd-search-icon" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path>
                </svg>
            </div>
        }

        <!-- Notifications -->
        <button class="cd-icon-button">
            <svg class="cd-icon" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z"></path>
            </svg>
            @if (HasNotifications)
            {
                <span class="cd-notification-badge"></span>
            }
        </button>

        <!-- Theme Toggle -->
        <button @onclick="ToggleTheme" class="cd-icon-button">
            @if (isDarkMode)
            {
                <svg class="cd-icon" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
                </svg>
            }
            else
            {
                <svg class="cd-icon" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                </svg>
            }
        </button>

        <!-- User Menu -->
        <AuthorizeView>
            <Authorized>
                @{
                    var userName = context.User.Identity?.Name ?? "Utente";
                    var userInitial = userName.Substring(0, 1).ToUpper();
                }
                
                <div class="cd-user-menu-container">
                    <button @onclick="ToggleUserMenu" class="cd-user-menu">
                        <div class="cd-user-avatar">
                            <span>@userInitial</span>
                        </div>
                        <div class="cd-user-info">
                            <span class="cd-user-name">@userName</span>
                        </div>
                        <svg class="cd-dropdown-icon" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                        </svg>
                    </button>

                    @if (showUserMenu)
                    {
                        <div class="cd-user-dropdown">
                            <div class="cd-user-dropdown-header">
                                <p class="cd-body-medium">@userName</p>
                                <p class="cd-body-small">@(context.User.FindFirst("email")?.Value)</p>
                            </div>
                            <div class="cd-user-dropdown-content">
                                <a href="/profile" class="cd-dropdown-item">
                                    <svg class="cd-dropdown-icon" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
                                    </svg>
                                    <span>Profilo</span>
                                </a>
                                <a href="/settings" class="cd-dropdown-item">
                                    <svg class="cd-dropdown-icon" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z" clip-rule="evenodd"></path>
                                    </svg>
                                    <span>Impostazioni</span>
                                </a>
                                <hr class="cd-dropdown-divider" />
                                <button @onclick="LogoutAsync" class="cd-dropdown-item cd-dropdown-item-danger">
                                    <svg class="cd-dropdown-icon" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z" clip-rule="evenodd"></path>
                                    </svg>
                                    <span>Esci</span>
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </Authorized>
        </AuthorizeView>
    </div>
</div>

@code {
    [Parameter] public bool ShowSearch { get; set; } = true;
    [Parameter] public bool ShowBreadcrumb { get; set; } = true;
    [Parameter] public bool HasNotifications { get; set; } = false;

    private string searchQuery = "";
    private bool showUserMenu = false;
    private bool isDarkMode = false;

    protected override Task OnInitializedAsync()
    {
        // Initialize theme from localStorage or system preference
        // This would be implemented with JS interop
        return Task.CompletedTask;
    }

    private string GetPageTitle()
    {
        var path = Navigation.ToBaseRelativePath(Navigation.Uri);
        return path switch
        {
            "" or "/" => "Dashboard",
            "admin/companies" => "Gestione Aziende",
            "admin/users" => "Gestione Utenti",
            "admin/settings" => "Impostazioni Sistema",
            "admin/analytics" => "Analytics Globali",
            "company/users" => "Utenti Azienda",
            "company/collections" => "Collezioni Azienda",
            "company/chat" => "Chat AI Aziendale",
            "company/analytics" => "Report Aziendali",
            "company/settings" => "Impostazioni Azienda",
            "user/collections" => "Le Mie Collezioni",
            "user/documents" => "I Miei Documenti",
            "user/chat" => "Chat AI",
            "user/conversations" => "Le Mie Conversazioni",
            "profile" => "Profilo Utente",
            "help" => "Aiuto",
            _ => "CleverDocs"
        };
    }

    private void ToggleUserMenu()
    {
        showUserMenu = !showUserMenu;
    }

    private void ToggleTheme()
    {
        isDarkMode = !isDarkMode;
        // Implement theme toggle with JS interop
    }

    private void OnSearchKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !string.IsNullOrWhiteSpace(searchQuery))
        {
            Navigation.NavigateTo($"/search?q={Uri.EscapeDataString(searchQuery)}");
        }
    }

    private async Task LogoutAsync()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login", true);
    }
}