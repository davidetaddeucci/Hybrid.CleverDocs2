@model Hybrid.CleverDocs.WebUI.ViewModels.Companies.CompanyListViewModel
@{
    ViewData["Title"] = "Companies Management";
    Layout = "_Layout";
}

<div class="container-fluid" data-page="companies">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-1">
                        <i class="material-symbols-rounded text-primary me-2">business</i>Companies Management
                    </h1>
                    <p class="text-muted mb-0">
                        @Model.Companies.Count() of @Model.Pagination.TotalItems companies
                    </p>
                </div>
                <div class="d-flex gap-2">
                    <a href="@Url.Action("Create")" class="btn btn-primary">
                        <i class="material-symbols-rounded me-2">add</i>New Company
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Controls -->
    <div class="row mb-4">
        <div class="col-12">
            <form method="get" id="searchForm" class="d-flex gap-3 align-items-center">
                <!-- Search Input -->
                <div class="flex-grow-1">
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="material-symbols-rounded text-muted">search</i>
                        </span>
                        <input type="text"
                               name="SearchTerm"
                               value="@Model.Search.SearchTerm"
                               class="form-control border-start-0 ps-0"
                               placeholder="Search companies by name or email..."
                               style="box-shadow: none;" />
                    </div>
                </div>

                <!-- Status Filter -->
                <select name="IsActive" class="form-select w-auto" onchange="updateFilters()" style="min-width: 120px;">
                    <option value="">All Status</option>
                    <option value="true" selected="@(Model.Search.IsActive == true)">Active</option>
                    <option value="false" selected="@(Model.Search.IsActive == false)">Inactive</option>
                </select>

                <!-- Clear Filters -->
                @if (Model.HasActiveFilters)
                {
                    <button type="button"
                            class="btn btn-outline-danger"
                            onclick="clearFilters()"
                            title="Clear all filters">
                        <i class="material-symbols-rounded">clear</i>
                    </button>
                }

                <!-- Hidden fields -->
                <input type="hidden" name="Page" value="1" />
                <input type="hidden" name="PageSize" value="@Model.Search.PageSize" />
            </form>
        </div>
    </div>

    <!-- Companies Table -->
    <div class="row">
        <div class="col-12">
            @if (Model.Companies.Any())
            {
                <div class="card shadow-sm">
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th class="border-0 ps-4">Company</th>
                                        <th class="border-0">Contact</th>
                                        <th class="border-0">Usage</th>
                                        <th class="border-0">R2R Status</th>
                                        <th class="border-0">Status</th>
                                        <th class="border-0 text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var company in Model.Companies)
                                    {
                                        <tr>
                                            <!-- Company Info -->
                                            <td class="ps-4">
                                                <div class="d-flex align-items-center">
                                                    <div class="me-3">
                                                        <div class="bg-primary text-white rounded-circle d-flex align-items-center justify-content-center" 
                                                             style="width: 40px; height: 40px; font-weight: bold;">
                                                            @company.Name.Substring(0, 1).ToUpper()
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <h6 class="mb-1">
                                                            <a href="@Url.Action("Details", new { id = company.Id })" 
                                                               class="text-decoration-none text-dark fw-bold">
                                                                @company.Name
                                                            </a>
                                                        </h6>
                                                        @if (!string.IsNullOrEmpty(company.Description))
                                                        {
                                                            <small class="text-muted">
                                                                @(company.Description.Length > 50 ? company.Description.Substring(0, 50) + "..." : company.Description)
                                                            </small>
                                                        }
                                                        @if (!string.IsNullOrEmpty(company.Website))
                                                        {
                                                            <div>
                                                                <a href="@company.Website" target="_blank" class="small text-primary text-decoration-none">
                                                                    <i class="material-symbols-rounded" style="font-size: 14px;">link</i>
                                                                    @company.Website
                                                                </a>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </td>

                                            <!-- Contact Info -->
                                            <td>
                                                @if (!string.IsNullOrEmpty(company.ContactEmail))
                                                {
                                                    <div class="small">
                                                        <i class="material-symbols-rounded me-1" style="font-size: 14px;">email</i>
                                                        @company.ContactEmail
                                                    </div>
                                                }
                                                @if (!string.IsNullOrEmpty(company.ContactPhone))
                                                {
                                                    <div class="small text-muted">
                                                        <i class="material-symbols-rounded me-1" style="font-size: 14px;">phone</i>
                                                        @company.ContactPhone
                                                    </div>
                                                }
                                            </td>

                                            <!-- Usage Stats -->
                                            <td>
                                                <div class="small">
                                                    <div><strong>@company.UserCount</strong> / @company.MaxUsers users</div>
                                                    <div><strong>@company.DocumentCount</strong> / @company.MaxDocuments docs</div>
                                                    <div><strong>@company.CollectionCount</strong> / @company.MaxCollections collections</div>
                                                    <div class="text-muted">
                                                        @(Math.Round((double)company.StorageUsed / (1024 * 1024 * 1024), 2)) / 
                                                        @(Math.Round((double)company.MaxStorageBytes / (1024 * 1024 * 1024), 2)) GB
                                                    </div>
                                                </div>
                                            </td>

                                            <!-- R2R Status -->
                                            <td>
                                                @if (!string.IsNullOrEmpty(company.R2RTenantId))
                                                {
                                                    <span class="badge bg-success">
                                                        <i class="material-symbols-rounded me-1" style="font-size: 12px;">check_circle</i>
                                                        Synced
                                                    </span>
                                                    <div class="small text-muted mt-1">
                                                        ID: @company.R2RTenantId.Substring(0, 8)...
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-warning">
                                                        <i class="material-symbols-rounded me-1" style="font-size: 12px;">sync</i>
                                                        Pending
                                                    </span>
                                                }
                                            </td>

                                            <!-- Status -->
                                            <td>
                                                @if (company.IsActive)
                                                {
                                                    <span class="badge bg-success">Active</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">Inactive</span>
                                                }
                                                <div class="small text-muted mt-1">
                                                    Created @company.CreatedAt.ToString("MMM dd, yyyy")
                                                </div>
                                            </td>

                                            <!-- Actions -->
                                            <td class="text-center">
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("Details", new { id = company.Id })"
                                                       class="btn btn-sm btn-outline-primary" title="View Details">
                                                        <i class="material-symbols-rounded">visibility</i>
                                                    </a>
                                                    <a href="@Url.Action("Edit", new { id = company.Id })"
                                                       class="btn btn-sm btn-outline-secondary" title="Edit">
                                                        <i class="material-symbols-rounded">edit</i>
                                                    </a>
                                                    @if (company.IsActive)
                                                    {
                                                        <button type="button"
                                                                class="btn btn-sm btn-outline-danger"
                                                                onclick="deactivateCompany('@company.Id', '@company.Name')"
                                                                title="Deactivate">
                                                            <i class="material-symbols-rounded">block</i>
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <div class="mb-3">
                        <i class="material-symbols-rounded text-muted" style="font-size: 4rem;">business</i>
                    </div>
                    <h4 class="text-muted">No companies found</h4>
                    <p class="text-muted mb-3">
                        @if (Model.HasActiveFilters)
                        {
                            <span>Try adjusting your search filters or </span>
                        }
                        <a href="@Url.Action("Create")" class="text-decoration-none">create your first company</a> to get started.
                    </p>
                    <a href="@Url.Action("Create")" class="btn btn-primary">
                        <i class="material-symbols-rounded me-2">add</i>Create Company
                    </a>
                </div>
            }
        </div>
    </div>

    <!-- Pagination -->
    @if (Model.Pagination.TotalPages > 1)
    {
        <div class="row mt-4">
            <div class="col-12">
                <nav aria-label="Companies pagination">
                    <ul class="pagination justify-content-center">
                        @if (Model.Pagination.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new {
                                    SearchTerm = Model.Search.SearchTerm,
                                    IsActive = Model.Search.IsActive,
                                    Page = Model.Pagination.CurrentPage - 1,
                                    PageSize = Model.Pagination.PageSize
                                })">Previous</a>
                            </li>
                        }

                        @for (int i = Math.Max(1, Model.Pagination.CurrentPage - 2); i <= Math.Min(Model.Pagination.TotalPages, Model.Pagination.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new {
                                    SearchTerm = Model.Search.SearchTerm,
                                    IsActive = Model.Search.IsActive,
                                    Page = i,
                                    PageSize = Model.Pagination.PageSize
                                })">@i</a>
                            </li>
                        }

                        @if (Model.Pagination.CurrentPage < Model.Pagination.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new {
                                    SearchTerm = Model.Search.SearchTerm,
                                    IsActive = Model.Search.IsActive,
                                    Page = Model.Pagination.CurrentPage + 1,
                                    PageSize = Model.Pagination.PageSize
                                })">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    }
</div>

<!-- JavaScript for Companies Functionality -->
<script>
    // Update filters when dropdown changes
    function updateFilters() {
        document.getElementById('searchForm').submit();
    }

    // Clear all filters
    function clearFilters() {
        document.querySelector('input[name="SearchTerm"]').value = '';
        document.querySelector('select[name="IsActive"]').value = '';
        document.getElementById('searchForm').submit();
    }

    // Deactivate company
    function deactivateCompany(companyId, companyName) {
        if (confirm(`Are you sure you want to deactivate the company "${companyName}"? This will also deactivate all users in this company.`)) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `/Companies/${companyId}/deactivate`;

            // Add anti-forgery token
            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            if (token) {
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = token.value;
                form.appendChild(tokenInput);
            }

            document.body.appendChild(form);
            form.submit();
        }
    }

    // Auto-submit search on Enter key
    document.querySelector('input[name="SearchTerm"]').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            document.getElementById('searchForm').submit();
        }
    });

    // Auto-submit search after typing (debounced)
    let searchTimeout;
    document.querySelector('input[name="SearchTerm"]').addEventListener('input', function() {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
            if (this.value.length >= 3 || this.value.length === 0) {
                document.getElementById('searchForm').submit();
            }
        }, 500);
    });
</script>

@Html.AntiForgeryToken()
