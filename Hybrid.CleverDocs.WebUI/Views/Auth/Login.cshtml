@model Hybrid.CleverDocs.WebUI.ViewModels.LoginViewModel
@{
    ViewData["Title"] = "Sign In";
    Layout = "_LoginLayout";
}

<div class="card z-index-0 fadeIn3 fadeInBottom">
    <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
        <div class="bg-gradient-dark shadow-dark border-radius-lg py-3 pe-1">
            <h4 class="text-white font-weight-bolder text-center mt-2 mb-0">Sign in</h4>
            <div class="row mt-3">
                <div class="col-2 text-center ms-auto">
                    <a class="btn btn-link px-3" href="javascript:;">
                        <i class="fa fa-facebook text-white text-lg"></i>
                    </a>
                </div>
                <div class="col-2 text-center px-1">
                    <a class="btn btn-link px-3" href="javascript:;">
                        <i class="fa fa-github text-white text-lg"></i>
                    </a>
                </div>
                <div class="col-2 text-center me-auto">
                    <a class="btn btn-link px-3" href="javascript:;">
                        <i class="fa fa-google text-white text-lg"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success" role="alert">
                <i class="fas fa-check-circle me-2"></i>
                @TempData["SuccessMessage"]
            </div>
        }

        @if (!string.IsNullOrEmpty(Model?.ErrorMessage))
        {
            <div class="alert alert-danger" role="alert">
                <i class="fas fa-exclamation-circle me-2"></i>
                @Model.ErrorMessage
            </div>
        }

        <form asp-action="Login" method="post" id="loginForm" role="form" class="text-start">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="ReturnUrl" />

            <div class="input-group input-group-outline my-3">
                <label class="form-label">Email</label>
                <input asp-for="Email" 
                       type="email" 
                       class="form-control" 
                       autocomplete="email" 
                       autofocus
                       placeholder="Enter your email address">
            </div>
            <span asp-validation-for="Email" class="text-danger"></span>

            <div class="input-group input-group-outline mb-3">
                <label class="form-label">Password</label>
                <input asp-for="Password" 
                       type="password" 
                       class="form-control" 
                       autocomplete="current-password"
                       placeholder="Enter your password">
            </div>
            <span asp-validation-for="Password" class="text-danger"></span>

            <div class="form-check form-switch d-flex align-items-center mb-3">
                <input asp-for="RememberMe" class="form-check-input" type="checkbox" id="rememberMe">
                <label class="form-check-label mb-0 ms-3" for="rememberMe">Remember me</label>
            </div>

            <div class="text-center">
                <button type="submit" class="btn bg-gradient-dark w-100 my-4 mb-2">Sign in</button>
            </div>

            <p class="mt-4 text-sm text-center">
                Don't have an account?
                <a href="@Url.Action("Register", "Auth")" class="text-primary text-gradient font-weight-bold">Sign up</a>
            </p>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Add loading state to form submission
        document.getElementById('loginForm').addEventListener('submit', function(e) {
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Signing In...';
            submitBtn.disabled = true;
            
            // Re-enable button after 5 seconds in case of error
            setTimeout(() => {
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            }, 5000);
        });
    </script>
}