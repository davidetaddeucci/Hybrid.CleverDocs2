@using Hybrid.CleverDocs.WebUI.Helpers
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - CleverDocs</title>

    @{
        var authService = Context.RequestServices.GetService<Hybrid.CleverDocs.WebUI.Services.IAuthService>();
        var jwtToken = authService?.GetStoredToken();
    }
    @if (!string.IsNullOrEmpty(jwtToken))
    {
        <meta name="jwt-token" content="@jwtToken" />
    }
    
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:300,400,500,600,700,900&display=swap" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    
    <!-- Material Icons -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,0,0" />
    
    <!-- Custom CSS (Material Dashboard 3 compatible) -->
    <link href="~/css/material-dashboard.css" rel="stylesheet" />

    <!-- Material Dashboard Extensions -->
    <link href="~/css/material-dashboard-extensions.css" rel="stylesheet" />

    <!-- R2R Admin Notifications -->
    <link href="~/css/r2r-admin-notifications.css" rel="stylesheet" />

    @await RenderSectionAsync("Styles", required: false)
</head>
<body class="g-sidenav-show bg-gray-100 role-@Html.GetUserRoleClass()">
    <!-- Sidebar -->
    <aside class="sidenav navbar navbar-vertical navbar-expand-xs border-radius-lg bg-white md-ext-collapsible" id="sidenav-main">

        <!-- Toggle Button -->
        <button class="md-ext-toggle-btn" id="sidenavToggle" aria-label="Toggle navigation" aria-expanded="true">
            <i class="fas fa-chevron-left"></i>
            <span class="md-ext-sr-only">Toggle sidebar</span>
        </button>
        <div class="sidenav-header">
            <i class="fas fa-times p-3 cursor-pointer text-dark opacity-5 position-absolute end-0 top-0 d-none d-xl-none" aria-hidden="true" id="iconSidenav"></i>
            <a class="navbar-brand px-4 py-3 m-0" href="#">
                @if (!string.IsNullOrEmpty(ViewBag.LogoUrl?.ToString()))
                {
                    <img src="@ViewBag.LogoUrl" class="navbar-brand-img" width="26" height="26" alt="main_logo">
                }
                else
                {
                    <i class="fas fa-brain navbar-brand-img"></i>
                }
                <span class="ms-1 text-sm text-dark">@ViewBag.CompanyName</span>
            </a>
        </div>
        <hr class="horizontal dark mt-0 mb-2">

        <!-- Search -->
        <div class="md-ext-search-container">
            <input type="text" class="md-ext-search-input" placeholder="Search menu..." aria-label="Search navigation">
        </div>

        <div class="navbar-collapse w-auto" id="sidenav-collapse-main">
            <!-- JWT Authentication: Navigation loaded dynamically based on JWT token -->
            <div id="navigation-container">
                <!-- Navigation will be loaded here by JavaScript -->
                @await Html.PartialAsync("_UserNavigation")
            </div>
        </div>
    </aside>

    <!-- Overlay for mobile -->
    <div class="md-ext-overlay" id="sidenavOverlay"></div>

    <!-- Main Content -->
    <main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg">
        <!-- Navbar -->
        <nav class="navbar navbar-main navbar-expand-lg px-0 mx-3 shadow-none border-radius-xl" id="navbarBlur" data-scroll="true">
            <div class="container-fluid py-1 px-3">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5">
                        <li class="breadcrumb-item text-sm"><a class="opacity-5 text-dark" href="javascript:;">Pages</a></li>
                        <li class="breadcrumb-item text-sm text-dark active" aria-current="page">@ViewData["Title"]</li>
                    </ol>
                </nav>
                <div class="collapse navbar-collapse mt-sm-0 mt-2 me-md-0 me-sm-4" id="navbar">
                    <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                        <!-- Search can go here -->
                    </div>
                    <ul class="navbar-nav d-flex align-items-center justify-content-end">
                        <li class="nav-item d-xl-none ps-3 d-flex align-items-center">
                            <a href="javascript:;" class="nav-link text-body p-0" id="iconNavbarSidenav">
                                <div class="sidenav-toggler-inner">
                                    <i class="sidenav-toggler-line"></i>
                                    <i class="sidenav-toggler-line"></i>
                                    <i class="sidenav-toggler-line"></i>
                                </div>
                            </a>
                        </li>
                        <li class="nav-item d-flex align-items-center">
                            <a href="#" class="nav-link text-body font-weight-bold px-0">
                                <i class="material-symbols-rounded">account_circle</i>
                                <span class="d-sm-inline d-none" id="user-name">User</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <!-- End Navbar -->

        <!-- Content Area -->
        <div class="container-fluid py-2">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @RenderBody()
        </div>
    </main>

    <!-- Scripts -->
    <!-- jQuery (required for legacy code) -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- SignalR -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
    <!-- Perfect Scrollbar -->
    <script src="https://cdn.jsdelivr.net/npm/perfect-scrollbar@1.5.5/dist/perfect-scrollbar.min.js"></script>

    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.js"></script>

    <script src="~/js/material-dashboard.js"></script>

    <!-- Material Dashboard Extensions -->
    <script src="~/js/material-dashboard-extensions.js"></script>

    <!-- Chart Manager -->
    <script src="~/js/charts/chart-manager.js"></script>

    @await RenderSectionAsync("Scripts", required: false)

    <!-- Authentication Script -->
    <script>
        // Cookie-based authentication - no localStorage needed
        $(document).ready(function() {
            // Authentication is handled server-side via cookies
            console.log('Cookie-based authentication initialized');
        });

        // Load user info from cookie (server-side rendered)
        (function() {
            try {
                // Get user info from cookie (accessible to JavaScript)
                const userInfoCookie = getCookieValue('CleverDocs.UserInfo');

                if (userInfoCookie) {
                    const userInfo = JSON.parse(decodeURIComponent(userInfoCookie));

                    // Update user name in navbar
                    const userNameElement = document.getElementById('user-name');
                    if (userNameElement && userInfo.fullName) {
                        userNameElement.textContent = userInfo.fullName;
                    }

                    // Load appropriate navigation based on role (default to 'user' if undefined)
                    const userRole = userInfo.role || 'user';
                    loadNavigationForRole(userRole);
                } else {
                    console.warn('No user info found in cookie - using default user role');
                    // Default to user role if no cookie found
                    loadNavigationForRole('user');
                }
            } catch (error) {
                console.error('Error loading user data from cookie:', error);
                // Default to user role on error
                loadNavigationForRole('user');
            }
        })();

        function getCookieValue(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
            return null;
        }

        function loadNavigationForRole(role) {
            const navigationContainer = document.getElementById('navigation-container');
            if (!navigationContainer) return;

            let navigationUrl;
            switch (role?.toLowerCase()) {
                case 'admin':
                    navigationUrl = '/Shared/_AdminNavigation';
                    break;
                case 'company':
                    navigationUrl = '/Shared/_CompanyNavigation';
                    break;
                case 'user':
                default:
                    navigationUrl = '/Shared/_UserNavigation';
                    break;
            }

            // Navigation is already loaded as default _UserNavigation
            // For now, keep the default navigation
            console.log('User role:', role, 'Navigation would be:', navigationUrl);
        }
    </script>
</body>
</html>