@model DocumentListViewModel
@{
    ViewData["Title"] = "Documents";
    ViewData["PageTitle"] = "Document Management";
    ViewData["Breadcrumb"] = new List<(string Text, string? Url)>
    {
        ("Dashboard", Url.Action("Index", "Home")),
        ("Documents", null)
    };
}

<div class="documents-page">
    <!-- Page Header -->
    <div class="page-header">
        <div class="header-content">
            <div class="header-info">
                <h1 class="page-title">
                    <i class="icon-folder-open"></i>
                    Documents
                </h1>
                <p class="page-description">Manage and organize your documents</p>
            </div>
            
            <div class="header-actions">
                <a href="@Url.Action("Index", "Upload")" class="btn btn-primary">
                    <i class="icon-upload"></i>
                    Upload Documents
                </a>
                
                <div class="view-toggle">
                    <button type="button" class="btn btn-outline @(Model.Search.ViewMode == ViewMode.Grid ? "active" : "")" 
                            onclick="toggleViewMode('grid')">
                        <i class="icon-grid"></i>
                    </button>
                    <button type="button" class="btn btn-outline @(Model.Search.ViewMode == ViewMode.List ? "active" : "")" 
                            onclick="toggleViewMode('list')">
                        <i class="icon-list"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filters -->
    <div class="search-filters-section">
        <form method="get" class="search-form" id="searchForm">
            <div class="search-bar">
                <div class="search-input-container">
                    <i class="icon-search"></i>
                    <input type="text" 
                           name="SearchTerm" 
                           value="@Model.Search.SearchTerm" 
                           placeholder="Search documents..." 
                           class="form-control search-input"
                           autocomplete="off"
                           data-suggestions-url="@Url.Action("GetSearchSuggestions")" />
                    
                    @if (!string.IsNullOrEmpty(Model.Search.SearchTerm))
                    {
                        <button type="button" class="btn-clear-search" onclick="clearSearch()">
                            <i class="icon-x"></i>
                        </button>
                    }
                    
                    <div class="search-suggestions" id="searchSuggestions" style="display: none;"></div>
                </div>
                
                <button type="submit" class="btn btn-primary">
                    <i class="icon-search"></i>
                    Search
                </button>
            </div>

            <div class="filters-row">
                <div class="filter-group">
                    <label>Collection:</label>
                    <select name="CollectionId" class="form-select" onchange="this.form.submit()">
                        <option value="">All Collections</option>
                        @foreach (var collection in Model.Search.AvailableCollections)
                        {
                            <option value="@collection.Value" @(collection.Value == Model.Search.CollectionId?.ToString() ? "selected" : "")>
                                @collection.Text
                            </option>
                        }
                    </select>
                </div>

                <div class="filter-group">
                    <label>File Type:</label>
                    <select name="SelectedContentTypes" class="form-select" onchange="this.form.submit()">
                        <option value="">All Types</option>
                        @foreach (var contentType in Model.Search.AvailableContentTypes)
                        {
                            <option value="@contentType.Value" @(Model.Search.SelectedContentTypes.Contains(contentType.Value) ? "selected" : "")>
                                @contentType.Text
                            </option>
                        }
                    </select>
                </div>

                <div class="filter-group">
                    <label>Sort By:</label>
                    <select name="SortBy" class="form-select" onchange="this.form.submit()">
                        @foreach (var sortOption in Model.Search.SortOptions)
                        {
                            <option value="@sortOption.Value" @(sortOption.Value == Model.Search.SortBy ? "selected" : "")>
                                @sortOption.Text
                            </option>
                        }
                    </select>
                </div>

                <div class="filter-group">
                    <button type="button" class="btn btn-outline" onclick="toggleSortDirection()">
                        <i class="icon-arrow-@(Model.Search.SortDirection == SortDirection.Desc ? "down" : "up")"></i>
                    </button>
                </div>

                @if (Model.HasActiveFilters)
                {
                    <div class="filter-group">
                        <a href="@Url.Action("Index")" class="btn btn-outline">
                            <i class="icon-x"></i>
                            Clear Filters
                        </a>
                    </div>
                }
            </div>

            <!-- Hidden fields for form state -->
            <input type="hidden" name="SortDirection" value="@Model.Search.SortDirection" id="sortDirection" />
            <input type="hidden" name="ViewMode" value="@Model.Search.ViewMode" id="viewMode" />
            <input type="hidden" name="Page" value="@Model.Search.Page" />
            <input type="hidden" name="PageSize" value="@Model.Search.PageSize" />
        </form>
    </div>

    <!-- Statistics Bar -->
    @if (Model.Statistics.TotalDocuments > 0)
    {
        <div class="statistics-bar">
            <div class="stat-item">
                <span class="stat-value">@Model.Statistics.TotalDocuments</span>
                <span class="stat-label">Documents</span>
            </div>
            <div class="stat-item">
                <span class="stat-value">@Model.Statistics.FormattedTotalSize</span>
                <span class="stat-label">Total Size</span>
            </div>
            @if (Model.Statistics.FavoriteCount > 0)
            {
                <div class="stat-item">
                    <span class="stat-value">@Model.Statistics.FavoriteCount</span>
                    <span class="stat-label">Favorites</span>
                </div>
            }
            @if (Model.Statistics.ProcessingCount > 0)
            {
                <div class="stat-item">
                    <span class="stat-value">@Model.Statistics.ProcessingCount</span>
                    <span class="stat-label">Processing</span>
                </div>
            }
        </div>
    }

    <!-- Documents Content -->
    <div class="documents-content">
        @if (!Model.Documents.Any())
        {
            <div class="empty-state">
                @if (Model.HasActiveFilters)
                {
                    <div class="empty-icon">
                        <i class="icon-search"></i>
                    </div>
                    <h3>No documents found</h3>
                    <p>No documents match your current search criteria.</p>
                    <a href="@Url.Action("Index")" class="btn btn-outline">Clear Filters</a>
                }
                else
                {
                    <div class="empty-icon">
                        <i class="icon-folder-open"></i>
                    </div>
                    <h3>No documents yet</h3>
                    <p>Upload your first document to get started.</p>
                    <a href="@Url.Action("Index", "Upload")" class="btn btn-primary">Upload Documents</a>
                }
            </div>
        }
        else
        {
            <!-- Document Grid/List View -->
            <div class="documents-container @(Model.Search.ViewMode.ToString().ToLower())-view" id="documentsContainer">
                @if (Model.Search.ViewMode == ViewMode.Grid)
                {
                    <div class="documents-grid">
                        @foreach (var document in Model.Documents)
                        {
                            <div class="document-card" data-document-id="@document.Id">
                                <div class="document-thumbnail">
                                    @if (!string.IsNullOrEmpty(document.ThumbnailUrl))
                                    {
                                        <img src="@document.ThumbnailUrl" alt="@document.Name" loading="lazy" />
                                    }
                                    else
                                    {
                                        <div class="file-type-icon">
                                            <i class="@document.FileTypeIcon"></i>
                                        </div>
                                    }
                                    
                                    @if (document.IsFavorite)
                                    {
                                        <div class="favorite-badge">
                                            <i class="icon-star-filled"></i>
                                        </div>
                                    }
                                    
                                    @if (document.IsProcessing)
                                    {
                                        <div class="processing-overlay">
                                            <div class="processing-spinner"></div>
                                            @if (document.ProcessingProgress.HasValue)
                                            {
                                                <div class="processing-progress">
                                                    @((int)(document.ProcessingProgress.Value * 100))%
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                                
                                <div class="document-info">
                                    <h4 class="document-name">
                                        <a href="@Url.Action("Details", new { documentId = document.Id })">
                                            @document.Name
                                        </a>
                                    </h4>
                                    
                                    <div class="document-meta">
                                        <span class="file-size">@document.FormattedSize</span>
                                        <span class="file-date">@document.RelativeUpdatedTime</span>
                                    </div>
                                    
                                    @if (document.Tags.Any())
                                    {
                                        <div class="document-tags">
                                            @foreach (var tag in document.Tags.Take(3))
                                            {
                                                <span class="tag">@tag</span>
                                            }
                                            @if (document.Tags.Count > 3)
                                            {
                                                <span class="tag-more">+@(document.Tags.Count - 3)</span>
                                            }
                                        </div>
                                    }
                                    
                                    <div class="document-status">
                                        <span class="status-badge @document.StatusBadgeClass">
                                            @document.StatusDisplayName
                                        </span>
                                    </div>
                                </div>
                                
                                <div class="document-actions">
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-outline dropdown-toggle" data-bs-toggle="dropdown">
                                            <i class="icon-more-vertical"></i>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li>
                                                <a class="dropdown-item" href="@Url.Action("Details", new { documentId = document.Id })">
                                                    <i class="icon-eye"></i> View
                                                </a>
                                            </li>
                                            @if (document.CanPreview)
                                            {
                                                <li>
                                                    <a class="dropdown-item" href="@document.PreviewUrl" target="_blank">
                                                        <i class="icon-external-link"></i> Preview
                                                    </a>
                                                </li>
                                            }
                                            <li>
                                                <a class="dropdown-item" href="@document.DownloadUrl">
                                                    <i class="icon-download"></i> Download
                                                </a>
                                            </li>
                                            @if (document.Permissions.CanEdit)
                                            {
                                                <li><hr class="dropdown-divider"></li>
                                                <li>
                                                    <a class="dropdown-item" href="@Url.Action("Edit", new { documentId = document.Id })">
                                                        <i class="icon-edit"></i> Edit
                                                    </a>
                                                </li>
                                            }
                                            <li>
                                                <form method="post" action="@Url.Action("ToggleFavorite", new { documentId = document.Id })" style="display: inline;">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="dropdown-item">
                                                        <i class="icon-star@(document.IsFavorite ? "-filled" : "")"></i>
                                                        @(document.IsFavorite ? "Remove from Favorites" : "Add to Favorites")
                                                    </button>
                                                </form>
                                            </li>
                                            @if (document.Permissions.CanDelete)
                                            {
                                                <li><hr class="dropdown-divider"></li>
                                                <li>
                                                    <form method="post" action="@Url.Action("Delete", new { documentId = document.Id })" 
                                                          onsubmit="return confirm('Are you sure you want to delete this document?')">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="dropdown-item text-danger">
                                                            <i class="icon-trash"></i> Delete
                                                        </button>
                                                    </form>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <!-- List View -->
                    <div class="documents-list">
                        <div class="list-header">
                            <div class="col-name">Name</div>
                            <div class="col-size">Size</div>
                            <div class="col-type">Type</div>
                            <div class="col-modified">Modified</div>
                            <div class="col-actions">Actions</div>
                        </div>
                        
                        @foreach (var document in Model.Documents)
                        {
                            <div class="list-item" data-document-id="@document.Id">
                                <div class="col-name">
                                    <div class="document-info">
                                        <div class="file-icon">
                                            <i class="@document.FileTypeIcon"></i>
                                        </div>
                                        <div class="document-details">
                                            <a href="@Url.Action("Details", new { documentId = document.Id })" class="document-name">
                                                @document.Name
                                                @if (document.IsFavorite)
                                                {
                                                    <i class="icon-star-filled favorite-icon"></i>
                                                }
                                            </a>
                                            @if (!string.IsNullOrEmpty(document.Description))
                                            {
                                                <div class="document-description">@document.Description</div>
                                            }
                                            @if (document.Tags.Any())
                                            {
                                                <div class="document-tags">
                                                    @foreach (var tag in document.Tags.Take(3))
                                                    {
                                                        <span class="tag">@tag</span>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-size">@document.FormattedSize</div>
                                <div class="col-type">
                                    <span class="content-type">@document.ContentType.Split('/').LastOrDefault()?.ToUpper()</span>
                                </div>
                                <div class="col-modified">
                                    <span class="relative-time">@document.RelativeUpdatedTime</span>
                                    <div class="exact-time">@document.UpdatedAt.ToString("MMM dd, yyyy HH:mm")</div>
                                </div>
                                <div class="col-actions">
                                    <div class="action-buttons">
                                        @if (document.CanPreview)
                                        {
                                            <a href="@document.PreviewUrl" target="_blank" class="btn btn-sm btn-outline" title="Preview">
                                                <i class="icon-eye"></i>
                                            </a>
                                        }
                                        <a href="@document.DownloadUrl" class="btn btn-sm btn-outline" title="Download">
                                            <i class="icon-download"></i>
                                        </a>
                                        @if (document.Permissions.CanEdit)
                                        {
                                            <a href="@Url.Action("Edit", new { documentId = document.Id })" class="btn btn-sm btn-outline" title="Edit">
                                                <i class="icon-edit"></i>
                                            </a>
                                        }
                                        <div class="dropdown">
                                            <button class="btn btn-sm btn-outline dropdown-toggle" data-bs-toggle="dropdown" title="More actions">
                                                <i class="icon-more-vertical"></i>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li>
                                                    <form method="post" action="@Url.Action("ToggleFavorite", new { documentId = document.Id })">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="dropdown-item">
                                                            <i class="icon-star@(document.IsFavorite ? "-filled" : "")"></i>
                                                            @(document.IsFavorite ? "Remove from Favorites" : "Add to Favorites")
                                                        </button>
                                                    </form>
                                                </li>
                                                @if (document.Permissions.CanDelete)
                                                {
                                                    <li><hr class="dropdown-divider"></li>
                                                    <li>
                                                        <form method="post" action="@Url.Action("Delete", new { documentId = document.Id })" 
                                                              onsubmit="return confirm('Are you sure you want to delete this document?')">
                                                            @Html.AntiForgeryToken()
                                                            <button type="submit" class="dropdown-item text-danger">
                                                                <i class="icon-trash"></i> Delete
                                                            </button>
                                                        </form>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>

            <!-- Pagination -->
            @if (Model.Pagination.TotalPages > 1)
            {
                <div class="pagination-container">
                    @await Html.PartialAsync("_Pagination", Model.Pagination)
                </div>
            }
        }
    </div>
</div>

@section Scripts {
    <script src="~/js/documents.js"></script>
}

@section Styles {
    <link rel="stylesheet" href="~/css/documents.css" />
}
